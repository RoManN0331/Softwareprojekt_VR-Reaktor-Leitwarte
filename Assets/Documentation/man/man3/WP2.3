.TH "WP2" 3 "Version 0.1" "NPP VR Simulation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
WP2 \- This class is used to control water pump 2 in an NPP simulation\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBSetPercentFromExternal\fP (int percent)"
.br
.RI "This method sets the percentage value of the switch based on an external input\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "GameObject \fBto_rotate\fP"
.br
.ti -1c
.RI "int \fBPercent\fP = 0"
.br
.RI "
.PP
\fBParameters\fP
.RS 4
\fIPercent\fP specifies the percentage the switch has been rotated based on its leftmost position
.RE
.PP
"
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "enum \fBReglerTypeEnum\fP { \fBGenau\fP = 0, \fBBinaer\fP = 1 }"
.br
.RI "This Enum defines two types of rotary switches binary and exact\&. "
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBStart\fP ()"
.br
.RI "This method initializes the \fBWP2\fP instance and sets the initial rotation of the switch\&. "
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.RI "This method updates the rotation of the switch based on the current value of Percent\&. "
.ti -1c
.RI "void \fBUpdateRotation\fP ()"
.br
.RI "This method updates the rotation of the switch\&. "
.ti -1c
.RI "void \fBHandleRotationInteraction\fP ()"
.br
.RI "This method computes the rotation of the handle based on the rotation of the interactor and calls \fBUpdateRotation()\fP to update the rotation of the switch as well as \fBSendPercentToSimulation()\fP to intiate a call to the REST Server to update the simulation\&. "
.ti -1c
.RI "void \fBSendPercentToSimulation\fP ()"
.br
.RI "This method initiates a call to the REST Server to update the simulation with the current RPM value of water pump 2\&. "
.ti -1c
.RI "void \fBOnEnable\fP ()"
.br
.RI "This method is called when the object is enabled and adds event listeners for the selectEntered and selectExited events\&. "
.ti -1c
.RI "void \fBOnDisable\fP ()"
.br
.RI "This method is called when the object is disabled and removes event listeners for the selectEntered and selectExited events\&. "
.ti -1c
.RI "void \fBOnSelectEntered\fP (SelectEnterEventArgs args)"
.br
.RI "This method is called when an interactor enters the object and sets the interactor and initialInteractorRotation values\&. "
.ti -1c
.RI "void \fBOnSelectExited\fP (SelectExitEventArgs args)"
.br
.RI "This method is called when an interactor exits the object and resets the isInteracting and interactor values\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBReglerTypeEnum\fP \fBReglerType\fP = \fBReglerTypeEnum\&.Genau\fP"
.br
.RI "
.PP
\fBParameters\fP
.RS 4
\fIReglerType\fP specifies the type of rotary switch
.RE
.PP
"
.ti -1c
.RI "int \fBStartRotation\fP = \-90"
.br
.RI "param name="EndRotation"> specifies the angle of the switches rightmost position"
.ti -1c
.RI "int \fBEndRotation\fP = 90"
.br
.RI "param name="lastPressTime"> specifies the last time the player didinteract with the switch"
.ti -1c
.RI "float \fBlastPressTime\fP = 0f"
.br
.RI "param name="pressCooldown"> specifies a cooldown between interactions with the switch"
.ti -1c
.RI "float \fBpressCooldown\fP = 0\&.1f"
.br
.ti -1c
.RI "UnityEngine\&.XR\&.Interaction\&.Toolkit\&.Interactors\&.XRBaseInteractor \fBinteractor\fP"
.br
.RI "
.PP
\fBParameters\fP
.RS 4
\fIinteractor\fP is a reference to an interactor
.RE
.PP
"
.ti -1c
.RI "bool \fBisInteracting\fP = false"
.br
.RI "param name="initialInteractorPosition"> is a Vector3 specifying the initial position of the interactor"
.ti -1c
.RI "Vector3 \fBinitialInteractorPosition\fP"
.br
.RI "param name="initialPercent"> specifies the initinal percentage the switch has already been rotated"
.ti -1c
.RI "int \fBinitialPercent\fP"
.br
.RI "param name="previousPercent"> specifies the percentage by which the switch was rotated in the last frame"
.ti -1c
.RI "int \fBpreviousPercent\fP"
.br
.RI "param name="initialInteractorRotation"> is a Quaternion specifying the initial rotation of the interactor upon interaction"
.ti -1c
.RI "Quaternion \fBinitialInteractorRotation\fP"
.br
.RI "param name="nppClient"> is a reference to a \fBNPPClient\fP instance in the scene"
.ti -1c
.RI "\fBNPPClient\fP \fBnppClient\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class is used to control water pump 2 in an NPP simulation\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBWP2\&.ReglerTypeEnum\fP\fR [private]\fP"

.PP
This Enum defines two types of rotary switches binary and exact\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\f(BIGenau \fP
.TP
\f(BIBinaer \fP
.SH "Member Function Documentation"
.PP 
.SS "void WP2\&.HandleRotationInteraction ()\fR [private]\fP"

.PP
This method computes the rotation of the handle based on the rotation of the interactor and calls \fBUpdateRotation()\fP to update the rotation of the switch as well as \fBSendPercentToSimulation()\fP to intiate a call to the REST Server to update the simulation\&. 
.SS "void WP2\&.OnDisable ()\fR [private]\fP"

.PP
This method is called when the object is disabled and removes event listeners for the selectEntered and selectExited events\&. 
.SS "void WP2\&.OnEnable ()\fR [private]\fP"

.PP
This method is called when the object is enabled and adds event listeners for the selectEntered and selectExited events\&. 
.SS "void WP2\&.OnSelectEntered (SelectEnterEventArgs args)\fR [private]\fP"

.PP
This method is called when an interactor enters the object and sets the interactor and initialInteractorRotation values\&. 
.PP
\fBParameters\fP
.RS 4
\fIargs\fP passes event specific arguments upon entering the interaction
.RE
.PP

.SS "void WP2\&.OnSelectExited (SelectExitEventArgs args)\fR [private]\fP"

.PP
This method is called when an interactor exits the object and resets the isInteracting and interactor values\&. 
.PP
\fBParameters\fP
.RS 4
\fIargs\fP passes event specific arguments upon exiting the interaction
.RE
.PP

.SS "void WP2\&.SendPercentToSimulation ()\fR [private]\fP"

.PP
This method initiates a call to the REST Server to update the simulation with the current RPM value of water pump 2\&. 
.SS "void WP2\&.SetPercentFromExternal (int percent)"

.PP
This method sets the percentage value of the switch based on an external input\&. 
.PP
\fBParameters\fP
.RS 4
\fIpercent\fP specifies the percentage value to set the switch to
.RE
.PP

.SS "void WP2\&.Start ()\fR [private]\fP"

.PP
This method initializes the \fBWP2\fP instance and sets the initial rotation of the switch\&. 
.SS "void WP2\&.Update ()\fR [private]\fP"

.PP
This method updates the rotation of the switch based on the current value of Percent\&. Additionally a call to the REST Server is initiated via \fBSendPercentToSimulation()\fP to update the simulation\&. 
.SS "void WP2\&.UpdateRotation ()\fR [private]\fP"

.PP
This method updates the rotation of the switch\&. 
.SH "Member Data Documentation"
.PP 
.SS "int WP2\&.EndRotation = 90\fR [private]\fP"

.PP
param name="lastPressTime"> specifies the last time the player didinteract with the switch
.SS "Vector3 WP2\&.initialInteractorPosition\fR [private]\fP"

.PP
param name="initialPercent"> specifies the initinal percentage the switch has already been rotated
.SS "Quaternion WP2\&.initialInteractorRotation\fR [private]\fP"

.PP
param name="nppClient"> is a reference to a \fBNPPClient\fP instance in the scene
.SS "int WP2\&.initialPercent\fR [private]\fP"

.PP
param name="previousPercent"> specifies the percentage by which the switch was rotated in the last frame
.SS "UnityEngine\&.XR\&.Interaction\&.Toolkit\&.Interactors\&.XRBaseInteractor WP2\&.interactor\fR [private]\fP"

.PP

.PP
\fBParameters\fP
.RS 4
\fIinteractor\fP is a reference to an interactor
.RE
.PP
param name="isInteracting"> tracks whether the player is currently interacting with the switch
.SS "bool WP2\&.isInteracting = false\fR [private]\fP"

.PP
param name="initialInteractorPosition"> is a Vector3 specifying the initial position of the interactor
.SS "float WP2\&.lastPressTime = 0f\fR [private]\fP"

.PP
param name="pressCooldown"> specifies a cooldown between interactions with the switch
.SS "\fBNPPClient\fP WP2\&.nppClient\fR [private]\fP"

.SS "int WP2\&.Percent = 0"

.PP

.PP
\fBParameters\fP
.RS 4
\fIPercent\fP specifies the percentage the switch has been rotated based on its leftmost position
.RE
.PP
param name="StartRotation"> specifies the angle of the switches leftmost position
.SS "float WP2\&.pressCooldown = 0\&.1f\fR [private]\fP"

.SS "int WP2\&.previousPercent\fR [private]\fP"

.PP
param name="initialInteractorRotation"> is a Quaternion specifying the initial rotation of the interactor upon interaction
.SS "\fBReglerTypeEnum\fP WP2\&.ReglerType = \fBReglerTypeEnum\&.Genau\fP\fR [private]\fP"

.PP

.PP
\fBParameters\fP
.RS 4
\fIReglerType\fP specifies the type of rotary switch
.RE
.PP
param name="to_rotate"> specifies the handle the player must interact with to rotate the switch
.SS "int WP2\&.StartRotation = \-90\fR [private]\fP"

.PP
param name="EndRotation"> specifies the angle of the switches rightmost position
.SS "GameObject WP2\&.to_rotate"


.SH "Author"
.PP 
Generated automatically by Doxygen for NPP VR Simulation from the source code\&.
